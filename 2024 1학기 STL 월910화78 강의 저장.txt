===============================================================================
stl.cpp, 저장시간: 2024-03-04 월요일 오후 7:52:17 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 STL 3.5 월910                                                       (1주1)
// 
// Visual Studio 17.9.0 이상, Release/x64
// Project 속성 / std::c++latest, SDL 검사 - no
// 
// 한학기 강의를 저장하는 save 만들기
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


int main() {
	cout << "STL 입니다." << '\n';

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-04 월요일 오후 7:53:21 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 STL 3.5 월910                                                       (1주1)
// 
// Visual Studio 17.9.0 이상, Release/x64
// Project 속성 / std::c++latest, SDL 검사 - no
// 
// 한학기 강의를 저장하는 save 만들기
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


int main() {
	cout << "STL 입니다." << '\n';

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-04 월요일 오후 8:00:16 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 STL 3.5 월910                                                       (1주1)
// 
// Visual Studio 17.9.0 이상, Release/x64
// Project 속성 / std::c++latest, SDL 검사 - no
// 
// 한학기 강의를 저장하는 save 만들기
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


int main() {
	cout << "STL 입니다." << '\n';

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 3:40:10 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 STL 3.5 월910                                                       (1주1)
// 
// Visual Studio 17.9.0 이상, Release/x64
// Project 속성 / std::c++latest, SDL 검사 - no
// 
// 한학기 강의를 저장하는 save 만들기
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


int main() {
	cout << "STL 입니다." << '\n';

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 3:40:43 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 STL 3.5 월910                                                       (1주1)
// 
// Visual Studio 17.9.0 이상, Release/x64
// Project 속성 / std::c++latest, SDL 검사 - no
// 
// 한학기 강의를 저장하는 save 만들기
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


int main() {
	cout << "save를 만들었습니다." << '\n';

	save("stl.cpp");
}


===============================================================================
save.h, 저장시간: 2024-03-05 화요일 오후 3:42:41 
===============================================================================
#pragma once

#include <string_view>


void save(std::string_view);


===============================================================================
save.cpp, 저장시간: 2024-03-05 화요일 오후 3:42:41 
===============================================================================
#include "save.h"

#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <chrono>

using namespace std;


void save(string_view fileName) {
	// fileName을 읽을 파일로 연다
	ifstream in { fileName.data() };
	//cout << sizeof in << endl;
	//cout << addressof(in) << endl;
	//cout << typeid(in).name() << endl;
	if(not in) {
		cout << fileName << " - 파일 열기 실패" << endl;
		exit(0);
	}

	// 저장할 파일을 덧붙여 쓰기 모드로 연다
	ofstream out { "2024 1학기 STL 월910화78 강의 저장.txt", ios::app };

	// 저장한 시간을 기록한다
	out << endl << endl << endl;
	auto now = chrono::system_clock::now();			// epoch
	auto time = chrono::system_clock::to_time_t(now);			// UTC 시간으로 변환
	auto lt = localtime(&time);	// 현지시간으로 변환

	auto old = out.imbue(locale("ko_KR"));
	// 날짜를 내 마음대로 출력한다
	out << "===============================================================================" << endl;
	out << fileName << put_time(lt, ", 저장시간: %x %A %X ") << endl;
	out << "===============================================================================" << endl;
	out.imbue(old);

	// 읽을 파일의 내용을 모두 읽어 쓸 파일에 덧붙여 쓴다
	// STL 자료구조와 알고리즘을 이용해 본다.
	// (좋은 코드는 아닌데, 예시로 이렇게도 가능하다는걸 보여주기 위함)
	vector<char> v { istreambuf_iterator { in }, {} };
	copy(v.begin(), v.end(), ostreambuf_iterator<char> { out });
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 3:42:41 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 STL 3.5 월910                                                       (1주1)
// 
// Visual Studio 17.9.0 이상, Release/x64
// Project 속성 / std::c++latest, SDL 검사 - no
// 
// 한학기 강의를 저장하는 save 만들기
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


int main() {
	cout << "save를 만들었습니다." << '\n';

	save("save.h");
	save("save.cpp");
	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 3:49:31 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


// [문제] main을 수정하지 않고 의도대로 실행되게 change함수를 선언하고 정의하라

void change(int& a, int& b);


int main() {
	int a { 1 };
	int b { 2 };

	change(a, b);

	cout << a << ", " << b << endl;			// [화면출력] 2, 1

	save("stl.cpp");
}


void change(int& a, int& b) {
	int temp = a;
	a = b;
	b = temp;
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 3:56:51 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


// [문제] main을 수정하지 않고 의도대로 실행되게 change함수를 선언하고 정의하라

void change(int&, int&);


int main() {
	int a { 1 };
	int b { 2 };

	change(a, b);

	cout << a << ", " << b << endl;			// [화면출력] 2, 1

	save("stl.cpp");
}


void change(int& a, int& b) {
	int temp { a };
	a = b;
	b = temp;
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 4:01:58 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


// [문제] main을 수정하지 않고 의도대로 실행되게 change함수를 선언하고 정의하라

class Dog {
public:
	int data;
};

ostream& operator<<(ostream& out, const Dog& dog) {
	return out << dog.data;
}


template<typename T>
void change(T&, T&);


int main() {
	Dog a { 1 };
	Dog b { 2 };

	change(a, b);

	cout << a << ", " << b << endl;			// [화면출력] 2, 1

	save("stl.cpp");
}


template<typename T>
void change(T& a, T& b) {
	T temp { a };
	a = b;
	b = temp;
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 4:02:28 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


// [문제] main을 수정하지 않고 의도대로 실행되게 change함수를 선언하고 정의하라

class Dog {
public:
	int data;
};

ostream& operator<<(ostream& out, const Dog& dog) {
	return out << "Dog { " << dog.data << " }";
}


template<typename T>
void change(T&, T&);


int main() {
	Dog a { 1 };
	Dog b { 2 };

	change(a, b);

	cout << a << ", " << b << endl;			// [화면출력] 2, 1

	save("stl.cpp");
}


template<typename T>
void change(T& a, T& b) {
	T temp { a };
	a = b;
	b = temp;
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 4:17:52 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


// [문제] main을 수정하지 않고 의도대로 실행되게 change함수를 선언하고 정의하라

class Dog {
public:
	int data;

public:
	operator int() {				// 형변환
		return data;
	}
};

ostream& operator<<(ostream& out, const Dog& dog) {
	//return out << "Dog { " << dog.data << " }";
	return out << dog.data;
}


template<typename T>
void change(T&, T&);


int main() {
	Dog a { 1 };
	Dog b { 2 };

	change(a, b);

	cout << a << ", " << b << endl;			// [화면출력] 2, 1

	save("stl.cpp");
}


template<typename T>
void change(T& a, T& b) {
	T temp { a };
	a = b;
	b = temp;
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 4:22:13 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// -------------------------------------------------------------------------------

#include <iostream>

#include "save.h"

using namespace std;


// [문제] main을 수정하지 않고 의도대로 실행되게 change함수를 선언하고 정의하라

class Dog;		// forward declaration 전방선언

class Dog {
	int data;

public:
	Dog(int data) : data { data } {

	}

	operator int() {				// 형변환
		return data;
	}

	friend ostream& operator<<(ostream& out, const Dog& dog) {
		//return out << "Dog { " << dog.data << " }";
		return out << dog.data;
	}
};



template<typename T>
void change(T&, T&);


int main() {
	Dog a { 1 };
	Dog b { 2 };

	change(a, b);

	cout << a << ", " << b << endl;			// [화면출력] 2, 1

	save("stl.cpp");
}


template<typename T>
void change(T& a, T& b) {
	T temp { a };
	a = b;
	b = temp;
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 5:04:49 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// 인터넷에서 C++언어 관련 설명을 찾아본다
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


int main() {
	int a[1000];

	for(int& num : a) {
		num = uid(dre);
	}

	for(int num : a) {
		cout << format("{:8}", num);
	}

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 5:07:47 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// 인터넷에서 C++언어 관련 설명을 찾아본다
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[1000];
	int max = 0;

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
		if(max < num) {
			max = num;
		}
	}

	cout << max << endl;

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 5:08:35 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// 인터넷에서 C++언어 관련 설명을 찾아본다
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[1000];
	int max = 0;

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
		if(max < num) {
			max = num;
		}
	}

	cout << max << endl;

	cout << std::max_element(a, a+1000) << endl;

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 5:08:47 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// 인터넷에서 C++언어 관련 설명을 찾아본다
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[1000];
	int max = 0;

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
		if(max < num) {
			max = num;
		}
	}

	cout << max << endl;

	cout << *std::max_element(a, a+1000) << endl;

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 5:09:40 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// 인터넷에서 C++언어 관련 설명을 찾아본다
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[1000];
	int max = 0;

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
		if(max < num) {
			max = num;
		}
	}

	cout << max << endl;

	cout << *std::max_element(a, a+1000) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 5:15:28 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// 인터넷에서 C++언어 관련 설명을 찾아본다
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[1000];

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
	}



	int max = a[0];

	for(int num : a) {
		if(max < num) {
			max = num;
		}
	}

	cout << max << endl;

	cout << *std::max_element(a, a+1000) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}


===============================================================================
stl.cpp, 저장시간: 2024-03-05 화요일 오후 5:16:53 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 5일 화요일                                (1주2)
// 
// 인터넷에서 C++언어 관련 설명을 찾아본다
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[1000];

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
	}



	int max = numeric_limits<int>::min();

	for(int num : a) {
		if(max < num) {
			max = num;
		}
	}

	cout << "최댓값 - " << max << endl;

	cout << *std::max_element(a, a+1000) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 5:33:43 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[100];

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
	}



	int max = numeric_limits<int>::min();

	for(int num : a) {
		if(max < num) {
			max = num;
		}
	}

	cout << "최댓값 - " << max << endl;

	cout << *std::max_element(a, a+100) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 5:35:26 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[100];

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
	}



	int max = numeric_limits<int>::min();

	for(int num : a) {
		if(max < num) {
			max = num;
		}
	}

	cout << "최댓값 - " << max << endl;

	cout << *std::max_element(a, a+100) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 5:37:21 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include <print>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[100];

	for(int& num : a) {
		num = uid(dre);
		cout << format("{:8}", num);
		print("{:8}", num);
	}



	int max = numeric_limits<int>::min();

	for(int num : a) {
		if(max < num) {
			max = num;
		}
	}

	cout << "최댓값 - " << max << endl;

	cout << *std::max_element(a, a+100) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 5:37:36 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include <print>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[100];

	for(int& num : a) {
		num = uid(dre);
		//cout << format("{:8}", num);
		print("{:8}", num);
	}



	int max = numeric_limits<int>::min();

	for(int num : a) {
		if(max < num) {
			max = num;
		}
	}

	cout << "최댓값 - " << max << endl;

	cout << *std::max_element(a, a+100) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 5:41:39 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include <print>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	int a[1000];

	for(int& num : a) {
		num = uid(dre);
		//cout << format("{:8}", num);
		print("{:8}", num);
	}



	int max = numeric_limits<int>::min();

	for(int num : a) {
		if(max < num) {
			max = num;
		}
	}

	cout << "최댓값 - " << max << endl;

	cout << *std::max_element(a, a+1000) << endl;
	cout << *std::max_element(begin(a), end(a)) << endl;

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 5:54:29 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include <print>
#include <algorithm>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
    int a[1000];

	for(int& num : a) {
		num = uid(dre);
		print("{:8}", num);
	}

	cout << endl;

	print("최댓값 - {}", *max_element(begin(a), end(a)));

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 5:59:08 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include <print>
#include <algorithm>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
    int a[1000];	// contiguous

	for(int& num : a) {
		num = uid(dre);
		print("{:8}", num);
	}

	cout << endl;

	print("최댓값 - {}", *max_element(begin(a), end(a)));

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:04:37 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include <print>
#include <algorithm>
#include <array>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	array<int, 100> a;	// 배열 대신 이걸 사용한다.	

	for(int& num : a) {
		num = uid(dre);
		print("{:8}", num);
	}

	cout << endl;

	print("최댓값 - {}", *max_element(begin(a), end(a)));

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:08:33 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <random>
#include <format>
#include <print>
#include <algorithm>
#include <array>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	array<int, 100> a;	// 배열 대신 이걸 사용한다.	
	
	println("배열과 같은 크기의 메모리만 사용한다! sizeof(arary<int, 100) = {}", sizeof(a));

	for(int& num : a) {
		num = uid(dre);
		print("{:8}", num);
	}

	cout << endl;

	print("최댓값 - {}", *max_element(begin(a), end(a)));

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:16:49 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <random>
#include <format>
#include <print>
#include <algorithm>
#include <array>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 1000, 9999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	array<int, 100> a;
	
	for(int& num : a) {
		num = uid(dre);
	}

	// [문제] a에 있는 int값을 파일 "int값들.txt"에 기록하라
	ofstream out { "int값들.txt" };
	for(int num : a) {
		out << num << endl;
	}

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:25:41 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <random>
#include <format>
#include <print>
#include <algorithm>
#include <array>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 10000, 99999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	array<int, 100> a;
	
	for(int& num : a) {
		num = uid(dre);
	}

	// [문제] a에 있는 int값을 파일 "int값들.txt"에 기록하라
	ofstream out { "int값들.txt" };	// RAII
	for(int num : a) {
		print(out, "{:8}", num);
	}

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:26:38 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <random>
#include <format>
#include <print>
#include <algorithm>
#include <array>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 0, 99'999 };


// [문제] 가장 큰 수를 찾아 화면에 출력한다.


int main() {
	array<int, 100> a;
	
	for(int& num : a) {
		num = uid(dre);
	}

	// [문제] a에 있는 int값을 파일 "int값들.txt"에 기록하라
	ofstream out { "int값들.txt" };	// RAII
	for(int num : a) {
		print(out, "{:8}", num);
	}

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:34:08 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <random>
#include <format>
#include <algorithm>
#include <print>
#include <array>
#include <list>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 0, 99'999 };


// [문제] 파일 "int값들.txt"에는 몇 개인지 모르는 int가 저장되어있다. 
// 모두 몇 개인지 출력하고 그 중에 가장 큰 값도 화면에 출력하라.


int main() {
	list<int> numbers;

	ifstream in { "int값들.txt" };

	while(!in.eof()) {
		int num;
		in >> num;
		numbers.push_back(num);
		println("{}", num);
	}

	println("\nsize: {}", numbers.size());
	println("max: {}", *max_element(numbers.begin(), numbers.end()));

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:41:54 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <iostream>
#include <fstream>
#include <random>
#include <format>
#include <algorithm>
#include <print>
#include <array>
#include <list>

#include "save.h"

using namespace std;


//random_device rd;
default_random_engine dre;		// 크기가 커서 전역변수로 한다
uniform_int_distribution uid { 0, 99'999 };


// [문제] 파일 "int값들.txt"에는 몇 개인지 모르는 int가 저장되어있다. 
// 모두 몇 개인지 출력하고 그 중에 가장 큰 값도 화면에 출력하라.


int main() {
	ifstream in { "int값들.txt" };
	if(not in) {
		exit(0);
	}

	int num;
	int cnt {};
	int max_value = numeric_limits<int>::min();
	while(in >> num) {
		++cnt;
		if(max_value < num) {
			max_value = num;
		}
	}

	println("cnt: {}", cnt);
	println("max: {}", max_value);

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:49:10 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <fstream>
#include <algorithm>
#include <print>

#include "save.h"

using namespace std;


// [문제] 파일 "int값들.txt"에는 몇 개인지 모르는 int가 저장되어있다. 
// 모두 몇 개인지 출력하고 그 중에 가장 큰 값도 화면에 출력하라.


int main() {
	ifstream in { "int값들.txt" };
	if(not in) {
		exit(0);
	}

	println("max: {}", *max_element(istream_iterator<int> { in }, {}));

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:49:41 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <fstream>
#include <algorithm>
#include <print>

#include "save.h"

using namespace std;


// [문제] 파일 "int값들.txt"에는 몇 개인지 모르는 int가 저장되어있다. 
// 모두 몇 개인지 출력하고 그 중에 가장 큰 값도 화면에 출력하라.


int main() {
	ifstream in { "int값들.txt" };
	if(not in) {
		exit(0);
	}

	println("max: {}", *max_element(istream_iterator<int> { in }, {}));
	// {}는 끝을 나타낸다.

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-11 월요일 오후 6:57:38 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주1)
// 
// -------------------------------------------------------------------------------

#include <print>

#include "save.h"

using namespace std;


template<typename T, size_t size>
class Array {
	T arr[size];

public:
	T& operator[](size_t index) {
		return arr[index];
	}
};

int main() {
	Array<int, 100> arr;

	println("Array<int, 100> size: {}", sizeof(arr));
	println("arr[10]: {}", arr[0]);

	save("stl.cpp");
}





===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 3:34:28 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <array>
#include "save.h"

using namespace std;

// [문제] int 100개를 저장하는데 메모리 bit값을 그대로 저장하자.
// int 100개 = sizeof(int) * 100 = 400 bytes

int main() {
	array<int, 100> a { };

	for(int num: a) {
		println("{}", num);
	}

	save("stl.cpp");
}





===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 3:48:42 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <array>
#include <numeric>
#include "save.h"

using namespace std;

// [문제] int 100개를 저장하는데 메모리 bit값을 그대로 저장하자.
// int 100개 = sizeof(int) * 100 = 400 bytes

int main() {
	array<int, 100> a;

	iota(a.begin(), a.end(), 1);

	for(int num: a) {
		print("{:8}", num);
	}

	save("stl.cpp");
}



===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 3:58:37 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <array>
#include <numeric>
#include <fstream>
#include "save.h"

using namespace std;

// [문제] int 100개를 저장하는데 메모리 bit값을 그대로 저장하자.
// int 100개 = sizeof(int) * 100 = 400 bytes

int main() {
	array<int, 100> a;

	iota(a.begin(), a.end(), 1);

	// 파일 "int100개를메모리그대로저장.txt"

	save("stl.cpp");
}
	


===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 4:07:20 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <array>
#include <numeric>
#include <fstream>
#include "save.h"

using namespace std;

// [문제] int 100개를 저장하는데 메모리 bit값을 그대로 저장하자.
// int 100개 = sizeof(int) * 100 = 400 bytes

int main() {
	array<int, 100> a;

	iota(a.begin(), a.end(), 1);

	// 파일 "int100개를메모리그대로저장.txt"
	ofstream out { "int100개를메모리그대로저장.txt" };
	
	// 저수준(low-level) I/O 사용
	out.write(
		(const char*)a.data(),		// data(): 시작번지 반환
		a.size()*sizeof(int)
	);

	save("stl.cpp");
}
	


===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 4:12:19 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <array>
#include <numeric>
#include <fstream>
#include "save.h"

using namespace std;

// [문제] int 100개를 저장하는데 메모리 bit값을 그대로 저장하자.
// int 100개 = sizeof(int) * 100 = 400 bytes

int main() {
	array<int, 100> a;

	iota(a.begin(), a.end(), 1);

	// 파일 "int100개를메모리그대로저장.txt"
	ofstream out { "int100개를메모리그대로저장.txt" };
	
	// 저수준(low-level) I/O 사용
	out.write(
		(const char*)a.data(),		// data(): 시작번지 반환
		400
	);

	// 401바이트가 나온다.

	save("stl.cpp");
}
	


===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 4:17:16 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <array>
#include <numeric>
#include <fstream>
#include "save.h"

using namespace std;

// [문제] int 100개를 저장하는데 메모리 bit값을 그대로 저장하자.
// int 100개 = sizeof(int) * 100 = 400 bytes

int main() {
	array<int, 100> a;

	iota(a.begin(), a.end(), 1);

	// 파일 "int100개를메모리그대로저장.txt"
	ofstream out { "int100개를메모리그대로저장.txt", ios::binary };
	
	// 저수준(low-level) I/O 사용
	out.write(
		(const char*)a.data(),		// data(): 시작번지 반환
		400
	);

	// 401바이트가 나온다.
	// os마다 늘어나는 정도가 다르다
	// 어디선가 1바이트 짜리를 2바이트로 기록한다.
	// .txt이기 때문이다. \n가 \n\r로 변환돼서 저장된다.

	save("stl.cpp");
}
	


===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 4:19:04 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <array>
#include <numeric>
#include <fstream>
#include "save.h"

using namespace std;

// [문제] int 100개를 저장하는데 메모리 bit값을 그대로 저장하자.
// int 100개 = sizeof(int) * 100 = 400 bytes

int main() {
	array<int, 100> a;

	iota(a.begin(), a.end(), 1);

	// 파일 "int100개를메모리그대로저장.txt"
	ofstream out { "int100개를메모리그대로저장.txt", ios::binary };
	
	// 저수준(low-level) I/O 사용
	out.write(
		(const char*)a.data(),		// data(): 시작번지 반환
		a.size() * sizeof(int)
	);

	// 401바이트가 나온다.
	// os마다 늘어나는 정도가 다르다
	// 어디선가 1바이트 짜리를 2바이트로 기록한다.
	// .txt이기 때문이다. \n가 \n\r로 변환돼서 저장된다.
	// ios::binary로 이걸 방지한다.

	save("stl.cpp");
}
	


===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 4:37:48 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <fstream>

#include "save.h"

using namespace std;

// [문제] 파일 "int100개를메모리그대로저장.txt"에
// int값 100개가 write함수를 사용하여 기록되어 있다.
// 파일은 binary모드로 열어 기록하였다.
// 파일에 기록된 int값 100개를 메모리로 읽어온 후
// 화면에 그 값을 출력하라. 

int main() {
	ifstream in { "int100개를메모리그대로저장.txt", ios::binary };

	int buf[100];
	in.read((char*)buf, sizeof(buf));

	for(int num : buf) {
		print("{:8}", num);
	}

	save("stl.cpp");
}
	


===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 4:43:52 
===============================================================================
// -------------------------------------------------------------------------------
// 2024 1학기 STL 월910화78     3월 11일 월요일                              (2주2)
// 
// -------------------------------------------------------------------------------

#include <print>
#include <fstream>
#include <array>

#include "save.h"

using namespace std;

// [문제] 파일 "int100개를메모리그대로저장.txt"에
// int값 100개가 write함수를 사용하여 기록되어 있다.
// 파일은 binary모드로 열어 기록하였다.
// 파일에 기록된 int값 100개를 메모리로 읽어온 후
// 화면에 그 값을 출력하라. 

int main() {
	ifstream in { "int100개를메모리그대로저장.txt", ios::binary };
	if(not in) {
		print("파일 열기 실패");
		exit(0);
	}

	array<int, 100> buf;
	in.read((char*)buf.data(), sizeof(buf));

	for(int num : buf) {
		print("{:8}", num);
	}

	save("stl.cpp");
}
	


===============================================================================
stl.cpp, 저장시간: 2024-03-12 화요일 오후 5:17:46 
===============================================================================
// --------------------------------------------------------------------------------
// 2024 1학기 STL  월910화78        3월 12일 화요일                            (2주2)
// 
// --------------------------------------------------------------------------------

#include <iostream>
#include <print>
#include <random>
#include <array>

#include "save.h"

using namespace std;


default_random_engine dre;
uniform_int_distribution<> uidChar { 'a', 'z' };
uniform_int_distribution<> uidNum { 1, 99'999 };


class Dog {
    char c { (char)uidChar(dre) };
    int num { uidNum(dre) };

public:
    friend ostream& operator<<(ostream& os, const Dog& dog) {
        return os << "글자: " << dog.c << ", 숫자: " << dog.num;
    }
};


int main() {
    array<Dog, 100> dogs;

    for(const Dog& dog : dogs) {
        cout << dog << endl;
    }

    save("stl.cpp");
}